ext {
    def springBusVersion = '2.0.0.RC2'
    def springTaskVersion = '1.0.1'
    def springBootVersion = '2.0.2.RELEASE'
    def springCloudVersion = 'Finchley.RC2'
    def springConfigVersion = '2.0.0.RC2'
    def netflixVersion = '2.0.0.RC2'

    imports = [
            springBusBom   : "org.springframework.cloud:spring-cloud-bus:${springBusVersion}",
            springBootBom  : "org.springframework.boot:spring-boot-dependencies:${springBootVersion}",
            springTaskBom  : "org.springframework.cloud:spring-cloud-task-dependencies:${springTaskVersion}",
            springCloudBom : "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}",
            netflixBom     : "org.springframework.cloud:spring-cloud-netflix:${netflixVersion}",
            springConfigBom: "org.springframework.cloud:spring-cloud-config:${springConfigVersion}",
    ]

    utils = [
            commons      : project(':backend:util:commons'),
            data         : project(':backend:util:data'),
            errorsCore   : project(':backend:util:errors:core'),
            errorsStarter: project(':backend:util:errors:starter'),
            test         : project(':backend:util:test'),
            validation   : project(':backend:util:validation'),
    ]

    def lombokVersion = '1.16.20'
    def validationApiVersion = '2.0.0.Final'
    def apacheCommonsVersion = '3.6'
    def guavaVersion = '23.6-jre'
    def csvVersion = '2.9.5'
    def modelMapperVersion = '1.1.2'
    def beanutilsVersion = '1.9.3'
    def evoVersion = '1.2.2'
    def jUnitVersion = '4.12'
    def mockitoVersion = '2.9.0'
    def jsonpathVersion = '2.4.0'
    def embeddedMongodbVersion = '2.0.3'
    def embeddedNeo4jVersion = '3.1.0'
    def rollbarVersion = '0.5.3'
    def slf4jVersion = '1.7.25'
    def jacksonVersion = '2.9.2'
    def adWordsVersion = '3.9.0'
    def hibernateValidatorVersion = '6.0.2.Final'
    def collectionValidatorVersion = '2.2.0'
    def jsoupVersion = '1.10.3'
    def modelMapperStarter = '1.1.0'
    def ideaAnnotationsVersion = '12.0'
    def progressBarVersion = '0.5.5'
    def javaFakerVersion = '0.14'
    def javaxAnnotationVersion = '1.3.2'

    libraries = [
            spring                : 'org.springframework.boot:spring-boot-starter',
            zuul                  : 'org.springframework.cloud:spring-cloud-starter-zuul',
            feign                 : 'org.springframework.cloud:spring-cloud-starter-openfeign',
            dataCommons           : 'org.springframework.data:spring-data-commons',
            messaging             : 'org.springframework.cloud:spring-cloud-starter-bus-amqp',
            configurationProcessor: 'org.springframework.boot:spring-boot-configuration-processor',
            jpa                   : 'org.springframework.boot:spring-boot-starter-data-jpa',
            mysql                 : 'mysql:mysql-connector-java',
            mongodb               : 'org.springframework.boot:spring-boot-starter-data-mongodb',
            mongodbDriver         : 'org.mongodb:mongodb-driver-reactivestreams',
            neo4j                 : 'org.springframework.data:spring-data-neo4j',
            neo4jDriver           : 'org.neo4j:neo4j-ogm-bolt-driver',
            test                  : 'org.springframework.boot:spring-boot-starter-test',
            streamTest            : 'org.springframework.cloud:spring-cloud-stream-test-support',

            contractStubRunner    : 'org.springframework.cloud:spring-cloud-contract-stub-runner',
            contractWireMock      : 'org.springframework.cloud:spring-cloud-contract-wiremock',
            contractVerifier      : 'org.springframework.cloud:spring-cloud-starter-contract-verifier',

            task                  : 'org.springframework.cloud:spring-cloud-starter-task',
            batch                 : 'org.springframework.boot:spring-boot-starter-batch',
            batchTest             : 'org.springframework.batch:spring-batch-test',

            web                   : 'org.springframework.boot:spring-boot-starter-web',
            webFlux               : 'org.springframework.boot:spring-boot-starter-webflux',
            webDocs               : 'org.springframework.restdocs:spring-restdocs-mockmvc',
            webFluxDocs           : 'org.springframework.restdocs:spring-restdocs-webtestclient',

            cache                 : 'org.springframework.boot:spring-boot-starter-cache',
            validation            : 'org.springframework.boot:spring-boot-starter-validation',

            acutator              : 'org.springframework.boot:spring-boot-starter-actuator',

            vault                 : 'org.springframework.cloud:spring-cloud-starter-vault-config',
            configServer          : 'org.springframework.cloud:spring-cloud-config-server',
            configClient          : 'org.springframework.cloud:spring-cloud-starter-config',
            configMonitor         : 'org.springframework.cloud:spring-cloud-config-monitor',

            discoveryServer       : 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server',
            discoveryClient       : 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client',

            security              : 'org.springframework.boot:spring-boot-starter-security',
            securityCloud         : 'org.springframework.cloud:spring-cloud-starter-security',
            securityOAuth2        : 'org.springframework.cloud:spring-cloud-starter-oauth2',
            securityTest          : 'org.springframework.security:spring-security-test',

            turbine               : 'org.springframework.cloud:spring-cloud-starter-turbine-amqp',
            turbineStream         : 'org.springframework.cloud:spring-cloud-starter-turbine-stream',

            hystrix               : 'org.springframework.cloud:spring-cloud-starter-hystrix',
            hystrixDashboard      : 'org.springframework.cloud:spring-cloud-starter-hystrix-dashboard',

            reactor               : "io.projectreactor:reactor-core",
            reactorExtra          : "io.projectreactor.addons:reactor-extra",
            reactorTest           : "io.projectreactor:reactor-test",

            lombok                : "org.projectlombok:lombok:${lombokVersion}",

            guava                 : "com.google.guava:guava:${guavaVersion}",
            apacheCommons         : "org.apache.commons:commons-lang3:${apacheCommonsVersion}",
            csv                   : "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${csvVersion}",

            modelMapper           : "org.modelmapper:modelmapper:${modelMapperVersion}",
            modelMapperStarter    : "com.github.jmnarloch:modelmapper-spring-boot-starter:${modelMapperStarter}",
            beanUtils             : "commons-beanutils:commons-beanutils:${beanutilsVersion}",
            evo                   : "org.atteo:evo-inflector:${evoVersion}",

            jUnit                 : "junit:junit:${jUnitVersion}",
            mockito               : "org.mockito:mockito-core:${mockitoVersion}",
            jsonpath              : "com.jayway.jsonpath:json-path:${jsonpathVersion}",
            embeddedMongodb       : "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embeddedMongodbVersion}",
            embeddedNeo4j         : "org.neo4j:neo4j-ogm-embedded-driver:${embeddedNeo4jVersion}",

            slf4j                 : "org.slf4j:slf4j-api:${slf4jVersion}",

            jackson               : "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            jacksonAnnotations    : "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",

            adWords               : "com.google.api-ads:ads-lib:${adWordsVersion}",
            rollbar               : "com.rollbar:rollbar:${rollbarVersion}",

            validationApi         : "javax.validation:validation-api:${validationApiVersion}",
            hibernateValidator    : "org.hibernate:hibernate-validator:${hibernateValidatorVersion}",
            collectionValidator   : "cz.jirutka.validator:validator-collection:${collectionValidatorVersion}",

            jsoup                 : "org.jsoup:jsoup:${jsoupVersion}",

            ideaAnnotations       : "com.intellij:annotations:${ideaAnnotationsVersion}",
            progressBar           : "me.tongfei:progressbar:${progressBarVersion}",
            javaFaker             : "com.github.javafaker:javafaker:${javaFakerVersion}",
            javaxAnnotation       : "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}"
    ]
}