ext {
    def springBusVersion = '2.0.0.M4'
    def springBootVersion = '2.0.0.M7'
    def springTaskVersion = '2.0.0.M3'
    def springCloudVersion = 'Finchley.M4'
    def springConfigVersion = '2.0.0.M6'

    imports = [
            springBusBom   : "org.springframework.cloud:spring-cloud-bus:${springBusVersion}",
            springBootBom  : "org.springframework.boot:spring-boot-dependencies:${springBootVersion}",
            springTaskBom  : "org.springframework.cloud:spring-cloud-task-dependencies:${springTaskVersion}",
            springCloudBom : "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}",
            springConfigBom: "org.springframework.cloud:spring-cloud-config:${springConfigVersion}",
    ]

    utils = [
            commons      : project(':backend:util:commons'),
            data         : project(':backend:util:data'),
            errorsCore   : project(':backend:util:errors:core'),
            errorsStarter: project(':backend:util:errors:starter'),
            test         : project(':backend:util:test'),
            validation   : project(':backend:util:validation'),
    ]

    cores = [
            agent   : project(':backend:agent:core'),
            location: project(':backend:location:core'),
            rating  : project(':backend:rating:core'),
            task    : project(':backend:task:core'),
    ]

    business = [
            agent   : project(':backend:agent:business'),
            keyword : project(':backend:keyword:business'),
            location: project(':backend:location:business'),
            rating  : project(':backend:rating:business'),
            task    : project(':backend:task:business'),
    ]

    def lombokVersion = '1.16.20'
    def validationApiVersion = '2.0.0.Final'
    def apacheCommonsVersion = '3.6'
    def guavaVersion = '23.6-jre'
    def commonsCsvVersion = '1.5'
    def modelMapperVersion = '1.1.2'
    def beanutilsVersion = '1.9.3'
    def evoVersion = '1.2.2'
    def jUnitVersion = '4.12'
    def mockitoVersion = '2.9.0'
    def jsonpathVersion = '2.4.0'
    def embeddedMongodbVersion = '2.0.0'
    def rollbarVersion = '0.5.3'
    def slf4jVersion = '1.7.25'
    def reactorVersion = '3.1.2.RELEASE'
    def jacksonVersion = '2.9.2'
    def adWordsVersion = '3.9.0'
    def hibernateValidatorVersion = '6.0.2.Final'
    def collectionValidatorVersion = '2.2.0'
    def hateoasVersion = '0.23.0.RELEASE'
    def jsoupVersion = '1.10.3'
    def modelMapperStarter = '1.1.0'
    def ideaAnnotationsVersion = '12.0'
    def progressBarVersion = '0.5.5'
    def javaFakerVersion = '0.14'

    def librariesDependencies = [
            lombok             : "org.projectlombok:lombok:${lombokVersion}",

            guava              : "com.google.guava:guava:${guavaVersion}",
            apacheCommons      : "org.apache.commons:commons-lang3:${apacheCommonsVersion}",
            csv                : "org.apache.commons:commons-csv:${commonsCsvVersion}",

            modelMapper        : "org.modelmapper:modelmapper:${modelMapperVersion}",
            modelMapperStarter : "com.github.jmnarloch:modelmapper-spring-boot-starter:${modelMapperStarter}",
            beanUtils          : "commons-beanutils:commons-beanutils:${beanutilsVersion}",
            evo                : "org.atteo:evo-inflector:${evoVersion}",

            jUnit              : "junit:junit:${jUnitVersion}",
            mockito            : "org.mockito:mockito-core:${mockitoVersion}",
            jsonpath           : "com.jayway.jsonpath:json-path:${jsonpathVersion}",
            embeddedMongodb    : "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embeddedMongodbVersion}",

            slf4j              : "org.slf4j:slf4j-api:${slf4jVersion}",

            reactor            : "io.projectreactor:reactor-core:${reactorVersion}",
            reactorExtra       : "io.projectreactor.addons:reactor-extra:${reactorVersion}",
            reactorTest        : "io.projectreactor:reactor-test:${reactorVersion}",

            jackson            : "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            jacksonAnnotations : "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",

            adWords            : "com.google.api-ads:ads-lib:${adWordsVersion}",
            rollbar            : "com.rollbar:rollbar:${rollbarVersion}",

            validationApi      : "javax.validation:validation-api:${validationApiVersion}",
            hibernateValidator : "org.hibernate:hibernate-validator:${hibernateValidatorVersion}",
            collectionValidator: "cz.jirutka.validator:validator-collection:${collectionValidatorVersion}",

            hateoas            : "org.springframework.hateoas:spring-hateoas:${hateoasVersion}",
            jsoup              : "org.jsoup:jsoup:${jsoupVersion}",

            ideaAnnotations    : "com.intellij:annotations:${ideaAnnotationsVersion}",
            progressBar        : "me.tongfei:progressbar:${progressBarVersion}",
            javaFaker          : "com.github.javafaker:javafaker:${javaFakerVersion}",
    ]

    // TODO: Remove artifact version
    def springDependencies = [
            spring                : 'org.springframework.boot:spring-boot-starter:2.0.0.M7',
            zuul                  : 'org.springframework.cloud:spring-cloud-starter-zuul:2.0.0.M2',
            feign                 : 'org.springframework.cloud:spring-cloud-starter-feign:2.0.0.M2',
            dataCommons           : 'org.springframework.data:spring-data-commons',
            messaging             : 'org.springframework.cloud:spring-cloud-starter-bus-amqp',
            configurationProcessor: 'org.springframework.boot:spring-boot-configuration-processor',
            jpa                   : 'org.springframework.boot:spring-boot-starter-data-jpa',
            mysql                 : 'mysql:mysql-connector-java',
            mongodb               : 'org.springframework.boot:spring-boot-starter-data-mongodb:2.0.0.M7',
            mongodbDriver         : 'org.mongodb:mongodb-driver-reactivestreams',
            neo4j                 : 'org.springframework.data:spring-data-neo4j:5.0.2.RELEASE',
            test                  : 'org.springframework.boot:spring-boot-starter-test:2.0.0.M7',
            streamTest            : 'org.springframework.cloud:spring-cloud-stream-test-support',
            jUnit5Api             : 'org.junit.jupiter:junit-jupiter-api',
            jUnit5Engine          : 'org.junit.jupiter:junit-jupiter-engine',

            task                  : 'org.springframework.cloud:spring-cloud-starter-task',
            batch                 : 'org.springframework.boot:spring-boot-starter-batch',
            batchTest             : 'org.springframework.batch:spring-batch-test',

            web                   : 'org.springframework.boot:spring-boot-starter-web',
            webFlux               : 'org.springframework.boot:spring-boot-starter-webflux:2.0.0.M7',

            cache                 : 'org.springframework.boot:spring-boot-starter-cache',
            validation            : 'org.springframework.boot:spring-boot-starter-validation',

            acutator              : 'org.springframework.boot:spring-boot-starter-actuator',
            acutatorDocs          : 'org.springframework.boot:spring-boot-actuator-docs:2.0.0.M3',

            vault                 : 'org.springframework.cloud:spring-cloud-starter-vault-config',
            configServer          : 'org.springframework.cloud:spring-cloud-config-server',
            configClient          : 'org.springframework.cloud:spring-cloud-starter-config',
            configMonitor         : 'org.springframework.cloud:spring-cloud-config-monitor',

            discoveryServer       : 'org.springframework.cloud:spring-cloud-starter-eureka-server:2.0.0.M2',
            discoveryClient       : 'org.springframework.cloud:spring-cloud-starter-eureka:2.0.0.M2',

            security              : 'org.springframework.boot:spring-boot-starter-security',
            securityCloud         : 'org.springframework.cloud:spring-cloud-starter-security',
            securityOAuth2        : 'org.springframework.cloud:spring-cloud-starter-oauth2',
            securityTest          : 'org.springframework.security:spring-security-test',

            turbine               : 'org.springframework.cloud:spring-cloud-starter-turbine-amqp',
            turbineStream         : 'org.springframework.cloud:spring-cloud-starter-turbine-stream:2.0.0.M2',

            hystrix               : 'org.springframework.cloud:spring-cloud-starter-hystrix',
            hystrixDashboard      : 'org.springframework.cloud:spring-cloud-starter-hystrix-dashboard:2.0.0.M2',
    ]

    libraries = librariesDependencies + springDependencies
}