import com.bmuschko.gradle.docker.DockerRemoteApiPlugin

buildscript {
    ext {
        springBootVersion = '2.0.0.M3'
        dockerVersion = '3.1.0'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven { url "http://repo1.maven.org/maven2/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.bmuschko:gradle-docker-plugin:${dockerVersion}")
    }
}

apply plugin: DockerRemoteApiPlugin
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

mainClassName = 'com.zephyr.auth.AuthApplication'

dependencies {
    compile libraries.webFlux
    compile libraries.acutator
    compile libraries.acutatorDocs
    compile libraries.security
    compile libraries.securityOAuth2
    compile libraries.validation
    compile libraries.mongodb
    compile libraries.configClient
    compile libraries.discoveryClient
    compile libraries.messaging

    compile utils.commons
    compile utils.errors
    compile utils.mapping

    compileOnly libraries.lombok

    testCompile libraries.test
    testCompile libraries.jsonpath
    testCompile libraries.securityTest

}

dependencyManagement {
    imports {
        mavenBom imports.springBootBom
        mavenBom imports.springCloudBom
    }
}

docker {
    registryCredentials {
        username = getDockerUserName()
        password = getDockerPassword()
    }
    javaApplication {
        baseImage = dockerBaseImage
        maintainer = dockerMainteiner
        port = 5000
        tag = getDockerTag()
    }
}