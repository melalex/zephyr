import com.bmuschko.gradle.docker.DockerRemoteApiPlugin

buildscript {
    ext {
        springBootVersion = '2.0.0.M7'
        dockerVersion = '3.1.0'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven { url "http://repo1.maven.org/maven2/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.bmuschko:gradle-docker-plugin:${dockerVersion}")
    }
}

apply plugin: DockerRemoteApiPlugin
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

mainClassName = 'com.zephyr.task.TaskApplication'

dependencies {
    compile libraries['webFlux']
    compile libraries['acutator']
    compile libraries['acutatorDocs']
//    compile libraries['mongodb']
    compile libraries['configClient']
    compile libraries['discoveryClient']
    compile libraries['messaging']

    // TODO: remove this dependencies
    compile group: 'org.springframework.data', name: 'spring-data-commons', version: '2.0.2.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-commons', version: '2.0.2.RELEASE'
    compile group: 'org.mongodb', name: 'mongodb-driver-reactivestreams', version: '1.7.0-beta1'
    compile group: 'io.projectreactor', name: 'reactor-core', version: '3.1.2.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-stream'
    compile 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    compile 'org.springframework.integration:spring-integration-core:5.0.1.BUILD-SNAPSHOT'

    compile utils['data']
    compile utils['errors']
    compile utils['commons']

    compileOnly libraries['lombok']
    compileOnly libraries['configurationProcessor']

    testCompile libraries['test']
}

dependencyManagement {
    imports {
        mavenBom imports.springBootBom
        mavenBom imports.springCloudBom
        mavenBom imports.springBusBom
    }
}

docker {
    registryCredentials {
        username = dockerUserName
        password = dockerPassword
    }
    javaApplication {
        baseImage = dockerBaseImage
        maintainer = dockerMainteiner
        port = 8018
        tag = dockerTag
    }
}
