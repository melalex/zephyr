import com.bmuschko.gradle.docker.DockerRemoteApiPlugin

buildscript {
    ext {
        springBootVersion = '2.0.0.M7'
        dockerVersion = '3.1.0'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven { url "http://repo1.maven.org/maven2/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.bmuschko:gradle-docker-plugin:${dockerVersion}")
    }
}

apply plugin: DockerRemoteApiPlugin
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

mainClassName = 'com.zephyr.location.LocationApplication'

dependencies {
    compile business['location']

    compile libraries['web']
    compile libraries['acutator']
    compile libraries['acutatorDocs']
    compile libraries['configClient']
    compile libraries['discoveryClient']
    compile libraries['messaging']

    compile utils['errorsStarter']

    compileOnly libraries['lombok']

    testCompile libraries['test']
}

dependencyManagement {
    imports {
        mavenBom imports.springBootBom
        mavenBom imports.springCloudBom
        mavenBom imports.springBusBom
    }
}

docker {
    registryCredentials {
        username = dockerUserName
        password = dockerPassword
    }
    javaApplication {
        baseImage = dockerBaseImage
        maintainer = dockerMainteiner
        port = 8014
        tag = dockerTag
    }
}
